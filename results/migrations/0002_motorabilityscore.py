# Generated by Django 4.2.23 on 2025-07-13 19:23

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('students', '0001_initial'),
        ('curriculum', '0002_alter_session_options_session_is_current'),
        ('results', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MotorAbilityScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('honesty', models.PositiveIntegerField(default=0, help_text='Score for honesty (0-5).', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('politeness', models.PositiveIntegerField(default=0, help_text='Score for politeness (0-5).', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('neatness', models.PositiveIntegerField(default=0, help_text='Score for neatness (0-5).', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('cooperation', models.PositiveIntegerField(default=0, help_text='Score for cooperation (0-5).', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('obedience', models.PositiveIntegerField(default=0, help_text='Score for obedience (0-5).', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('punctuality', models.PositiveIntegerField(default=0, help_text='Score for punctuality (0-5).', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('attentiveness', models.PositiveIntegerField(default=0, help_text='Score for attentiveness (0-5).', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('attitude', models.PositiveIntegerField(default=0, help_text='Score for participation/performance in games (0-5).', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('emotional_stability', models.PositiveIntegerField(default=0, help_text='Score for emotional_stability (0-5).', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('perseverance', models.PositiveIntegerField(default=0, help_text='Score for perseverance (0-5).', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('leadership', models.PositiveIntegerField(default=0, help_text='Score for leadership (0-5).', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('physical_education', models.PositiveIntegerField(default=0, help_text='Score for physical education (0-5).', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('games', models.PositiveIntegerField(default=0, help_text='Score for participation/performance in games (0-5).', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('handwriting', models.PositiveIntegerField(default=0, help_text='Score for handwriting (0-5).', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('verbal_fluency', models.PositiveIntegerField(default=0, help_text='Score for verbal fluency (0-5).', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('reading', models.PositiveIntegerField(default=0, help_text='Score for reading (0-5).', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('musical', models.PositiveIntegerField(default=0, help_text='Score for musical (0-5).', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('handling_tools', models.PositiveIntegerField(default=0, help_text='Score for handling tools (0-5).', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('student', models.ForeignKey(help_text='The student for whom these scores are recorded.', on_delete=django.db.models.deletion.CASCADE, related_name='motor_ability_scores', to='students.student')),
                ('term', models.ForeignKey(help_text='The academic term for which these scores apply.', on_delete=django.db.models.deletion.CASCADE, related_name='motor_ability_scores', to='curriculum.term')),
            ],
            options={
                'verbose_name': 'Motor Ability/Behavioral Score',
                'verbose_name_plural': 'Motor Ability/Behavioral Scores',
                'ordering': ['term', 'student'],
                'unique_together': {('student', 'term')},
            },
        ),
    ]
